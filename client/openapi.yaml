openapi: 3.0.0
info:
  title: Flashcards API
  version: 1.0.0
  description: |
    API for managing and rating flashcards.

    ## How to Test This Project

    ### Prerequisites
    - Ensure that Node.js and npm are installed on your machine.
    - Clone the project repository from GitHub.

    ### Setup
    1. Navigate to the project directory:
       ```bash
       cd path/to/project
       ```
    2. Install the required dependencies:
       ```bash
       npm install
       ```

    ### Running the Tests
    - To run the API tests, make sure the server is set up properly:
      ```bash
      npm test
      ```
    - This command will execute all tests located in the `tests/` directory using Jest and Supertest.

    ### Testing Endpoints Individually
    - Use a tool like Postman or cURL to interact with the API endpoints manually if desired.
    - For example, to test the `/api/flashcards` endpoint:
      ```bash
      curl -X GET http://localhost:3000/api/flashcards
      ```

    ### Troubleshooting
    - If tests are not running, verify that all dependencies are installed and that the server configuration matches the project requirements.
    - Ensure the database (SQLite) is set up and accessible by the API during tests.

paths:
  /api/flashcards:
    get:
      summary: Get all flashcards (excluding hidden ones)
      responses:
        '200':
          description: List of flashcards
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Flashcard'
        '500':
          description: Server error

  /api/flashcards/{id}/hide:
    post:
      summary: Hide a flashcard by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Flashcard hidden successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Server error

  /api/flashcards/rate:
    post:
      summary: Rate a flashcard set
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                setId:
                  type: integer
                  description: ID of the flashcard set to rate
                rating:
                  type: integer
                  description: Rating value between 1 and 5
                  minimum: 1
                  maximum: 5
      responses:
        '201':
          description: Rating added
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Invalid rating
        '500':
          description: Server error

  /api/flashcards/top-rated:
    get:
      summary: Get top-rated flashcard sets
      responses:
        '200':
          description: List of top-rated flashcard sets
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    set_id:
                      type: integer
                    avg_rating:
                      type: number
                      format: float
        '500':
          description: Server error

components:
  schemas:
    Flashcard:
      type: object
      properties:
        id:
          type: integer
        question:
          type: string
        answer:
          type: string
        created_at:
          type: string
          format: date-time
        hidden:
          type: boolean
